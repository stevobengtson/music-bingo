version: '3'

services:
    # db:
    #     image: postgres
    #     environment:
    #         POSTGRES_USER: ${POSTGRES_USER:-postgres}
    #         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    #         PGDATA: /data/postgres
    #     volumes:
    #         - postgres:/data/postgres
    #     ports:
    #         - "5432:5432"
    #     restart: unless-stopped

    # api:
    #     build: ./api
    #     environment:
    #         RAILS_ENV: development
    #         DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: "true"
    #         DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@db/music_bingo
    #         DATABASE_NAME: music_bingo
    #         DATABASE_USER: postgres
    #         DATABASE_PASSWORD: changeme
    #         DATABASE_HOST: db
    #     volumes:
    #         - ./api:/usr/src/app
    #         - gem_cache:/usr/local/bundle/gems
    #     ports:
    #         - "3000:3000"
    #     depends_on:
    #         - db

    database:
        image: mariadb:latest
        environment:
            - MYSQL_DATABASE=${DATABASE_NAME}
            - MYSQL_USER=${DATABASE_USER}
            - MYSQL_PASSWORD=${DATABASE_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - mysql:/var/lib/mysql

    php-fpm:
        build:
            context: ./php-fpm
        depends_on:
            - database
        environment:
            - APP_ENV=${APP_ENV}
            - APP_SECRET=${APP_SECRET}
            - DATABASE_URL=mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@database:3306/${DATABASE_NAME}?serverVersion=mariadb-10.5.8
            - JWT_SECRET_KEY=${JWT_SECRET_KEY}
            - JWT_PUBLIC_KEY=${JWT_SECRET_KEY}
            - JWT_PASSPHRASE=${JWT_PASSPHRASE}
        volumes:
            - ./php-fpm:/var/www
        ports:
            - "8000:8000"

    # web:
    #     build: ./web
    #     ports:
    #       - "4200:4200"
    #     environment:
    #         SHELL: /bin/bash
    #         NODE_ENV: development
    #     volumes:
    #         - ./web/:/usr/src/app/
    #     depends_on:
    #         - api
    #     entrypoint: npm start -- --poll 1
   
    redis:
        image: 'redis:alpine'
        command: redis-server
        ports:
            - '6379:6379'
        volumes:
            - 'redis:/data'

volumes:
    postgres:
    gem_cache:
    mysql:

